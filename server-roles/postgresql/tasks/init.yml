- name: create {{ci_server_postgres_user}} group
  group:
    name: '{{ci_server_postgres_user}}'
    system: yes

- name: create {{ci_server_postgres_user}} user
  user:
    name: '{{ci_server_postgres_user}}'
    group: '{{ci_server_postgres_user}}'
    groups: postgres
    append: yes
    system: yes

- name: postgresql systemd service file
  template:
    src: cider-ci_postgresql.service
    dest: /etc/systemd/system/cider-ci_postgresql.service

- name: reload systemctl
  command: systemctl daemon-reload
  changed_when: false

- name: make sure the postgresql service is not running
  service:
    name: cider-ci_postgresql
    state: stopped
  when: ci_clean_slate

- name: create the data directory
  file:
    path: /cider-ci/data
    state: directory

- shell: rm -rf {{ci_server_postgres_data_dir}}
  when: ci_clean_slate

- name: create the postgresql data directory
  file:
    path: '{{ci_server_postgres_data_dir}}'
    state: directory
    owner: '{{ci_server_postgres_user}}'
    group: '{{ci_server_postgres_user}}'

- name: create the postgresql socket directory
  file:
    path: '{{ci_server_postgres_socket_dir}}/'
    state: directory
    owner: '{{ci_server_postgres_user}}'
    group: '{{ci_server_postgres_user}}'
    mode: 0755

- stat:
    path: '{{ci_server_postgres_data_dir}}/postgresql.conf'
  register: postgresql_conf_stat

- name: initialize the database
  become: yes
  become_user: '{{ci_server_postgres_user}}'
  shell: >
    {{ci_server_postgres_bin_dir}}/initdb
    -E UTF8
    --auth-host=md5
    --auth-local=peer
    --username=root
    {{ci_server_postgres_data_dir}}
  when: not postgresql_conf_stat.stat.exists

- name: configure postgresql port
  lineinfile:
    dest: '{{ci_server_postgres_data_dir}}/postgresql.conf'
    regexp: .*port\s*=\s*\d+.*
    line: port = {{ci_server_postgres_port}}
    owner: '{{ci_server_postgres_user}}'
    group: '{{ci_server_postgres_user}}'
    mode: 0600

- name: configure postgresql socket dir
  lineinfile:
    dest: '{{ci_server_postgres_data_dir}}/postgresql.conf'
    regexp: unix_socket_directories\s*=
    line: unix_socket_directories = '{{ci_server_postgres_socket_dir}}'
    owner: '{{ci_server_postgres_user}}'
    group: '{{ci_server_postgres_user}}'
    mode: 0600

- name: the postgresql service is running
  service:
    name: cider-ci_postgresql
    state: started
    enabled: yes


