- file: path={{ui_root_path}}
        owner={{user_interface_user}}
        group={{user_interface_user}}
        state=directory
        recurse=true

### Bundle #####################################################################

- name: Bundle Jruby
  shell: su -l -s /bin/bash -c 'source /etc/profile.d/rbenv-load.sh
          && rbenv-load
          && cd {{ui_root_path}}
          && export RAILS_ENV={{rails_env}}
          && export RBENV_VERSION={{rubies.jruby.version}}
          && bundle install --deployment' {{user_interface_user}}
         executable=/bin/bash
  register: bundle_jruby
  changed_when: bundle_jruby.stdout | match(".*Installing.*")


- name: Bundle MRI
  shell: su -l -s /bin/bash -c 'source /etc/profile.d/rbenv-load.sh
          && rbenv-load
          && cd {{ui_root_path}}
          && export RAILS_ENV={{rails_env}}
          && export RBENV_VERSION={{rubies.mri.version}}
          && bundle install --deployment' {{user_interface_user}}
         executable=/bin/bash
  register: bundle_mri
  changed_when: bundle_mri.stdout | match(".*Installing.*")


### Secret ####################################################################

- template: src=secrets.yml
            dest={{ui_root_path}}/config/secrets.yml
            owner={{user_interface_user}}
            group={{user_interface_user}}
            mode=0600
  register: secret

### Database ##################################################################

- name: Configure database
  template: src=database.yml
            dest={{ui_root_path}}/config/database.yml
            owner={{user_interface_user}}
            mode=0755
  register: database_config

- name: Migrate
  shell:  su -l -s /bin/bash -c 'source /etc/profile.d/rbenv-load.sh
            && rbenv-load
            && cd {{ui_root_path}}
            && export RAILS_ENV={{rails_env}}
            && export RBENV_VERSION={{rubies.mri.version}}
            && bundle exec rake db:create db:migrate' {{user_interface_user}}
          executable=/bin/bash
  register: migrate
  changed_when: not migrate.stdout | match("")


### Assets ####################################################################

- template:
    src: theme-selector.sass
    dest: "{{ui_root_path}}/app/assets/stylesheets/theme-selector.sass"
    owner: "{{user_interface_user}}"
    mode: 0755

- name: Precompile assets
  shell:  su -l -s /bin/bash -c 'source /etc/profile.d/rbenv-load.sh
            && rbenv-load
            && cd {{ui_root_path}}
            && export RAILS_ENV={{rails_env}}
            && export RBENV_VERSION={{rubies.mri.version}}
            && rm -rf public/assets/*
            && rm -rf tmp/cache/*
            && bundle exec rake assets:precompile' {{user_interface_user}}
          executable=/bin/bash
  register: precompile_assets
  changed_when: not precompile_assets.stderr | match("")

### logrotation ################################################################

- template: src=logrotate
            dest=/etc/logrotate.d/{{user_interface_service_name}}

### Shared Service #############################################################

- template: src=wrapper.sh
            dest={{user_interface_wrapper_bin}}
            mode=755
  register: user_interface_wrapper

- template: src=start.sh
            dest={{user_interface_service_bin}}
            mode=755
  register: user_interface_start


### Upstart Service ############################################################

- template: src=init.conf
            dest=/etc/init/cider-ci_user-interface.conf
  register: init_script
  when: ansible_distribution_release == 'trusty'


### Systemd Service ############################################################

- template: src=service.conf
            dest=/etc/systemd/system/{{user_interface_service_name}}.service
  register: user_interface_systemd_service
  when: ansible_distribution_release == 'jessie'

### enable

- service: name={{user_interface_service_name}} enabled=yes
  ignore_errors: true

- command: systemctl enable {{user_interface_service_name}}
  when: ansible_distribution_release == 'jessie'
  ignore_errors: true


### (re-) start service #######################################################

- command: logrotate -f /etc/logrotate.d/{{user_interface_service_name}}

- service:
    name: '{{user_interface_service_name}}'
    state: stopped
  ignore_errors: true

- service:
    name: '{{user_interface_service_name}}'
    state: started
